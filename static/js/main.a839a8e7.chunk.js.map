{"version":3,"sources":["assets/sounds/alright.mp3","assets/sounds/theme.mp3","assets/sounds/omg.mp3","components/Header/Header.js","components/Alerts/Alerts.js","components/Score/Score.js","components/Main/Main.js","components/Footer/Footer.js","components/Card/Card.js","components/App/App.js","registerServiceWorker.js","index.js"],"names":["module","exports","popoverLeft","Popover","id","Header","props","className","OverlayTrigger","trigger","placement","overlay","Button","src","alt","Alerts","Alert","bsStyle","alertType","message1","message2","Score","shake","score","topScoreType","topScore","Main","volumeOn","onClick","volume","children","Footer","href","target","rel","Card","increment","shuffle","image","name","App","state","cards","selected","soundURL","theme","soundPosition","soundStatus","Sound","status","PLAYING","setState","sort","a","b","Math","random","volumeClick","PAUSED","incrementClick","includes","soundIncorrect","setTimeout","this","bind","push","newScore","soundCorrect","map","i","key","autoLoad","url","playStatus","playPosition","Component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.a839a8e7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/alright.1b2da803.mp3\";","module.exports = __webpack_public_path__ + \"static/media/theme.743c5f3a.mp3\";","module.exports = __webpack_public_path__ + \"static/media/omg.634ce896.mp3\";","// IMPORTS\r\nimport React from 'react';\r\nimport \"./Header.css\";\r\nimport Popover from 'react-bootstrap/Popover';\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\r\nimport Button from 'react-bootstrap/Button';\r\n// \r\nconst popoverLeft = (\r\n    <Popover id=\"popover-positioned-left\">\r\n        <strong>Game Instructions</strong><br />\r\n        Click on a character to earn points, but don't select a character more than once!\r\n    </Popover>\r\n);\r\n// PROPS: Header\r\nconst Header = props => (\r\n    <header className=\"header row\">\r\n        <div className=\"col-lg-3\"></div>\r\n        <div className=\"col-lg-6 text-center\">\r\n            <OverlayTrigger trigger=\"click\" placement=\"left\" overlay={popoverLeft}>\r\n                <Button className=\"logo-button btn-dark\">\r\n                    <img src=\"./images/logo.png\" className=\"bobs-burgers\" alt=\"Bob's Burgers Logo\"/>\r\n                </Button>\r\n            </OverlayTrigger>\r\n        </div>\r\n        <div className=\"col-lg-3\"></div>\r\n    </header>\r\n)\r\n// EXPORT DEFAULT: Header\r\nexport default Header;","// IMPORTS\r\nimport React from 'react';\r\nimport './Alerts.css';\r\nimport Alert from 'react-bootstrap/Alert';\r\n\r\nconst Alerts = props => (\r\n    <Alert bsStyle={`${props.alertType}`}>\r\n        <h3>\r\n            <strong>{props.message1}</strong> {props.message2}\r\n        </h3>\r\n    </Alert>\r\n);\r\n\r\nexport default Alerts;","// IMPORTS\r\nimport React from 'react';\r\nimport \"./Score.css\";\r\n// PROPS: Navbar\r\nconst Score = props => (\r\n    <div className=\"row\">\r\n        <div className=\"col-lg-2\"></div>\r\n        <div className=\"col-lg-8\"></div>\r\n        <div className=\"col-lg-2\">\r\n            <button id={props.shake} className={`btn btn-block btn-score btn-${props.alertType}`}>\r\n                <h3>Score <span className=\"badge\">{props.score}</span></h3>\r\n            </button>\r\n            <button className={`btn btn-block btn-score btn-${props.topScoreType}`}>\r\n                <h3>Top Score <span className=\"badge\">{props.topScore}</span></h3>\r\n            </button>\r\n        </div>\r\n    </div>\r\n)\r\n// EXPORT DEFAULT: Score\r\nexport default Score;","// IMPORTS\r\nimport React from 'react';\r\nimport \"./Main.css\";\r\n// PROPS: Main\r\nconst Main = props => (\r\n    <main className={`${props.shake}`}>\r\n        <div className=\"gif\">\r\n            <button className={`btn btn-link ${props.volumeOn}`} onClick = {() => { props.volume(); }}>\r\n                <i className={`fas fa-volume-up fa-4x volume-icon`}></i>\r\n            </button>\r\n            <button className={`btn btn-link`} onClick = {() => { props.volume(); }}>\r\n                <i className={\"fas fa-volume-off fa-4x volume-icon\"}></i>\r\n            </button>\r\n            {/* <img id=\"linda-gif\" src=\"./images/happy-dance.gif\" /> */}\r\n        </div>\r\n        <div className=\"container\">\r\n            {props.children}\r\n        </div>\r\n        {/* <div className=\"gif\">\r\n            <img id=\"louise-gif\" src=\"./images/louise.gif\" />\r\n        </div> */}\r\n    </main>\r\n)\r\n// EXPORT DEFAULT: Main\r\nexport default Main;","// IMPORTS\r\nimport React from 'react';\r\nimport \"./Footer.css\";\r\n// PROPS: Footer\r\nconst Footer = props => (\r\n    <table>\r\n        <tbody>\r\n            <tr>\r\n                <td className=\"align-middle\">\r\n                    <a href=\"https://reactjs.org/\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                        <i className=\"fab fa-react fa-2x\"></i>\r\n                    </a>\r\n                    <a href=\"https://github.com/vcasmirri/clicky-game\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                        <i className=\"fab fa-github fa-2x\"></i>\r\n                    </a>\r\n                    <div className=\"spacer\"></div>\r\n                    Vince Casmirri © 2020\r\n                </td>\r\n            </tr>\r\n        </tbody>\r\n    </table>\r\n)\r\n// EXPORT DEFAULT: Footer\r\nexport default Footer;","// IMPORTS\r\nimport React from \"react\";\r\nimport \"./Card.css\";\r\n// PROPS: Card\r\nconst Card = props => (\r\n    <div className=\"click-item neutral\" onClick = {() => { props.increment(props.id); props.shuffle(props.id); }}>\r\n        <img className=\"card-image\" src={props.image} alt={props.name}/>\r\n    </div>\r\n);\r\n// EXPORT DEFAULT: Card\r\nexport default Card;","// IMPORTS\nimport React, { Component } from 'react';\nimport Sound from 'react-sound';\nimport './App.css';\nimport Header from '../Header/Header.js';\nimport Alerts from '../Alerts/Alerts.js';\nimport Score from '../Score/Score.js';\nimport Main from '../Main/Main.js';\nimport Footer from '../Footer/Footer.js';\nimport Card from '../Card/Card.js';\nimport cards from '../../assets/json/cards.json';\nimport soundCorrect from '../../assets/sounds/alright.mp3';\nimport soundIncorrect from '../../assets/sounds/omg.mp3';\nimport theme from '../../assets/sounds/theme.mp3';\n// CLASS: App\nclass App extends Component{\n// STATE    \n    state = {\n        cards,\n        score: 0,\n        topScore: 0,\n        selected: [],\n        soundURL: theme,\n        soundPosition: 0,\n        soundStatus: Sound.status.PLAYING,\n        shake: \"\",\n        message1: \"Select an image to begin!\",\n        message2: \"\",\n        alertType: \"info\",\n        topScoreType: \"info\",\n        volume: \"on\"\n    };\n// ON CLICK: SHUFFLE CARDS\n    shuffle = id => {\n        this.setState({\n            cards: this.state.cards.sort(function(a,b){\n                    return 0.5 - Math.random();\n                }\n            )\n        })\n    }\n    // ON CLICK: TURN ON/OFF VOLUME\n    volumeClick = () => {\n        if(this.state.volume == \"off\"){\n            this.setState({ \n                volume: \"on\",\n                soundStatus: Sound.status.PLAYING\n            });\n        }\n        else{\n            this.setState({ \n                volume: \"off\",\n                soundStatus: Sound.status.PAUSED,\n                soundURL: theme\n            });\n            \n        }\n    };\n// ON CLICK: INCREMENT COUNT ON CARD\n    incrementClick = id => {\n        let ids = this.state.selected\n        const incorrect = ids.includes(id);\n        if(!incorrect){\n            this.state.selected.push(id);\n            let newScore = this.state.score + 1;\n            this.setState({score: newScore});\n            if(newScore === 12){\n                this.setState({\n                    score: 0,\n                    selected: [],\n                    topScore: newScore,\n                    message1: \"You win!\",\n                    message2: \"\",\n                    alertType: \"success\"\n                });\n                if(this.state.volume === \"on\"){\n                    this.setState({ \n                        soundStatus: Sound.status.PLAYING,\n                        soundPosition: 0,\n                        soundURL: soundCorrect\n                    });\n                }\n            }\n            else if(newScore > this.state.topScore){\n                this.setState({\n                    topScore: newScore, \n                    message1: \"YAS!\",\n                    message2: \"You guessed correctly!\",\n                    alertType: \"success\",\n                    topScoreType: \"success\"\n                });\n                if(this.state.volume === \"on\"){\n                    this.setState({ \n                        soundStatus: Sound.status.PLAYING,\n                        soundPosition: 0,\n                        soundURL: soundCorrect\n                    });\n                }\n            }\n            else{\n                this.setState({\n                    message1: \"YAS!\",\n                    message2: \"You guessed correctly!\",\n                    alertType: \"success\",\n                    topScoreType: \"info\"\n                });\n                if(this.state.volume === \"on\"){\n                    this.setState({ \n                        soundStatus: Sound.status.PLAYING,\n                        soundPosition: 0,\n                        soundURL: soundCorrect\n                    });\n                }\n            }\n        }\n        else{\n            this.setState({\n                score: 0,\n                selected: [], \n                shake: \"incorrect\",\n                message1: \"WRONG!\",\n                message2: \"Start over and try again!\",\n                alertType: \"danger\",\n                topScoreType: \"info\"\n            });\n            if(this.state.volume === \"on\"){\n                this.setState({ \n                    soundStatus: Sound.status.PLAYING,\n                    soundPosition: 0,\n                    soundURL: soundIncorrect\n                });\n            }\n            setTimeout(function(){ \n                this.setState({ shake: \"\" }); \n            }.bind(this), 1000);\n        }\n    };\n// RENDER \n    render(){\n        return(\n            <div className=\"app\">\n                <Header/>\n                <Alerts\n                    message1={this.state.message1}\n                    message2={this.state.message2}\n                    alertType={this.state.alertType}\n                />\n                <Score \n                    shake={this.state.shake}\n                    score={this.state.score} \n                    topScore={this.state.topScore}\n                    alertType={this.state.alertType}\n                    topScoreType={this.state.topScoreType}\n                />\n                <Main \n                    shake={this.state.shake}\n                    volumeOn={this.state.volume}\n                    volume={this.volumeClick}\n                >\n                    {this.state.cards.map((cards,i) => (\n                        <Card \n                            id={cards.id} \n                            name={cards.name} \n                            image={cards.image} \n                            key={i} \n                            increment={this.incrementClick} shuffle={this.shuffle}\n                        />\n                    ))}\n                </Main>\n                <Sound \n                    autoLoad={true} \n                    url={this.state.soundURL} \n                    playStatus={this.state.soundStatus} \n                    playPosition={this.state.soundPosition}\n                />\n                <Footer/>\n            </div>\n        );\n    };\n}\n// EXPORT DEFAULT: App\nexport default App;","const isLocalhost = Boolean(\n  window.location.hostname === 'localhost' || \n  window.location.hostname === '[::1]' || \n  window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport default function register(){\n  if(process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator){\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if(publicUrl.origin !== window.location.origin){\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n      if(isLocalhost){\n        checkValidServiceWorker(swUrl);\n        navigator.serviceWorker.ready.then(() => \n          console.log('This web app is being served cache-first by a service worker. To learn more, visit https://goo.gl/SC7cgQ')\n        );\n      } \n      else {\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl){\n  navigator.serviceWorker.register(swUrl).then(registration => {\n    registration.onupdatefound = () => {\n      const installingWorker = registration.installing;\n      installingWorker.onstatechange = () => {\n        if(installingWorker.state === 'installed'){\n          if(navigator.serviceWorker.controller){\n            console.log('New content is available; please refresh.');\n          }\n          else{\n            console.log('Content is cached for offline use.');\n          }\n        }\n      };\n    };\n  }).catch(error => console.error('Error during service worker registration:', error));\n}\n\nfunction checkValidServiceWorker(swUrl){\n  fetch(swUrl).then(response => {\n    if(response.status === 404 || response.headers.get('content-type').indexOf('javascript') === -1){\n      navigator.serviceWorker.ready.then(registration =>\n        registration.unregister().then(() => window.location.reload())\n      );\n    } \n    else{\n      registerValidSW(swUrl);\n    }\n  }).catch(() => console.log('No internet connection found. App is running in offline mode.'));\n}\n\nexport function unregister(){\n  if('serviceWorker' in navigator){\n    navigator.serviceWorker.ready.then(registration => registration.unregister());\n  }\n}","// IMPORTS\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport registerServiceWorker from './registerServiceWorker';\n// RENDER \nReactDOM.render(<App />, document.getElementById('root'));\n// REGISTER SERVICE WORKER\nregisterServiceWorker();"],"sourceRoot":""}